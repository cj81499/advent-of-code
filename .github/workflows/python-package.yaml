name: Python Package

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: Setup uv
        uses: astral-sh/setup-uv@v5.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Sanity check Python version
        # https://docs.python.org/3/using/cmdline.html#cmdoption-version
        run: |
          uv run --frozen python --version --version
          [[ "$(uv run --frozen python --version)" == Python\ ${{ matrix.python-version }}* ]]

      - name: Check format (ruff)
        run: uv run --frozen ruff format --check .

      - name: Lint (ruff)
        run: uv run --frozen ruff check --output-format=github .

      - name: Check types (mypy)
        run: uv run --frozen mypy .

      - name: Run tests
        run: uv run --frozen pytest --cov=. --cov-report=xml

      # consider ditching codecov - https://hynek.me/articles/ditch-codecov-python/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  zizmor:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      - name: Run zizmor ðŸŒˆ
        run: uvx zizmor --persona=auditor --format=sarif . > results.sarif
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
          category: zizmor

  check:
    if: always()
    runs-on: Ubuntu-latest
    needs:
      - build
      - zizmor

    steps:
      - name: Print job results
        run: echo '${{ toJSON(needs) }}'

      - name: Check if all jobs succeeded
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
